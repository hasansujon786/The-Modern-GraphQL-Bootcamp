# Type definitions (shema)
# Scallar types - String, Boolean, Int, Float, ID
type Query {
  users(query: String): [User!]!
  posts(query: String): [Post!]!
  comments: [Comment!]!
  me: User!
  post: Post!
}

type Mutation {
  createUser(data: CreateUserInput): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!

  createPost(data: CreatePostInput): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: UpdatePostInput!): Post!

  createComment(data: CreateCommentInput): Comment!
  deleteComment(id: ID!): Comment!
  updateComment(id: ID!, data: UpdateCommentInput!): Comment!
}

type Subscription {
  count: Int!
  comment(postId: ID!): Comment!
  post: Post!
}

### INPUTS ###
input CreateUserInput {
  name: String!
  email: String!
  age: Int
}
input UpdateUserInput {
  name: String
  email: String
  age: Int
}

input CreatePostInput {
  title: String!
  body: String!
  published: Boolean!
  auther: ID!
}
input UpdatePostInput {
  title: String
  body: String
  published: Boolean
}

input CreateCommentInput {
  text: String!
  auther: ID!
  post: ID!
}
input UpdateCommentInput {
  text: String
}

### TYPES ###
type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post]!
  comments: [Comment]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  auther: User!
  comments: [Comment]!
}

type Comment {
  id: ID!
  text: String!
  auther: User!
  post: Post!
}
